image: docker:19.03.1

services:
  - docker:19.03.1-dind

before_script:
  - apk add --update bash wget ca-certificates openssl git tar openssh-client curl
  - apk add ansible ansible-lint
  - export ANSIBLE_HOST_KEY_CHECKING=False

  - docker login registry.u-hopper.com -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: "tcp://docker:2375"
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  key: ${CI_COMMIT_REF_SLUG}

stages:
  - build
  - push
  - trigger-deploy
  - notify

build_dev:
  stage: build
  script:
    - apk add --update curl php7 php7-phar php7-json php7-iconv php7-openssl
    - curl --show-error --silent https://getcomposer.org/installer | php
    - ./create_docker_image -si
  artifacts:
    paths:
      - hub_image.tar.gz
    expire_in: 1 day
  only:
    - develop

push_dev:
  stage: push
  script:
    - docker load -i hub_image.tar.gz
    - docker push registry.u-hopper.com/wenet/hub:latest
  dependencies:
    - build_dev
  only:
    - develop

deploy_dev:
  stage: trigger-deploy
  script:
    - curl --request POST --form "token=${CI_DEPLOY_TOKEN}" --form ref=develop https://lab.u-hopper.com/api/v4/projects/29/trigger/pipeline
  dependencies:
    - push_dev
  only:
    - develop

build_prod:
  stage: build
  script:
    - apk add --update curl php7 php7-phar php7-json php7-iconv php7-openssl
    - curl --show-error --silent https://getcomposer.org/installer | php
    - ./create_docker_image -si $CI_COMMIT_TAG
  artifacts:
    paths:
      - hub_image.tar.gz
    expire_in: 1 day
  only:
    - tags

push_prod:
  stage: push
  script:
    - docker load -i hub_image.tar.gz
    - docker push registry.u-hopper.com/wenet/hub:$CI_COMMIT_TAG
  dependencies:
    - build_prod
  only:
    - tags

notify:
  stage: notify
  script:
    - echo $ANSIBLE_VAULT_PASSWORD > ansible/password_file
    - ansible-playbook --vault-password-file ansible/password_file notify-tag-push.yml
  dependencies:
    - push_prod
  only:
    - tags
