#!/bin/bash

SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )


SAVE_IMAGE_TO_TARGZ=0
PULL_IMAGE=0

args=`getopt si $*`
if [ $? != 0 ]
then
  echo 'Usage: ...'
  exit 2
fi

set -- $args
for i do
  case "$i" in
     -s)
       SAVE_IMAGE_TO_TARGZ=1
       shift;;
     -i)
       PULL_IMAGE=1
       shift;;
  esac
done

DEFAULT_VERSION=latest
VERSION=$2

if [ -z "${VERSION}" ]; then
    VERSION=${DEFAULT_VERSION}
    echo "Build version not specified: building with default version [${VERSION}]"
else
    echo "Building with specified version [${VERSION}]"
fi

REGISTRY="registry.u-hopper.com"
IMAGE_NAME="wenet/hub:$VERSION"

if [[ ${PULL_IMAGE} == 1 ]]; then
  docker pull ${REGISTRY}/${IMAGE_NAME} || true
fi

docker build --cache-from ${REGISTRY}/${IMAGE_NAME} -t ${IMAGE_NAME} .

if [ $? == 0 ]; then
    echo "Build successful: ${IMAGE_NAME}"

    # Tagging images for registry

    echo "Tagging image for push to registry.u-hopper.com"
    docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}
    if [ $SAVE_IMAGE_TO_TARGZ == 1 ]; then
      echo " - saving image ${IMAGE_NAME} to tar.gz"
      docker save ${REGISTRY}/${IMAGE_NAME} | gzip > hub_image.tar.gz
    fi
    echo "Image can be pushed with:"
    echo "- docker push ${REGISTRY}/${IMAGE_NAME}"

else
    echo "Build failed!"
    exit 1
fi
